<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." name="POS" default="build">

	<!-- Defineeri muutujad -->
	<property name="build.dir" 			value="${basedir}/build"/>
	<property name="build.classes.dir" 	value="${build.dir}/classes"/>
	<property name="src.dir" 			value="${basedir}/src"/>
	<property name="dist.dir" 			value="${basedir}/build/jar"/>
	<property name="doc.dir" 			value="${build.dir}/doc"/>
	<property name="img.dir" 			value="${basedir}/img"/>
	<property name="test.reports.dir" 	value="${build.dir}/reports/"/>
	<property name="lib.dir" 			value="${basedir}/lib" />
	<property name="etc.dir" 			value="${basedir}/etc" />
	<property name="conf.dir" 			value="${basedir}/conf" />
	<property name="data.dir"			value="${basedir}/data"/>
	<property name="db.file"			value="${data.dir}/POSdb"/>
	<property name="db.alias"			value="POS"/>
	<property name="db.url" 			value="jdbc:hsqldb:hsql://localhost/POS"/>
	<property name="lib.hibernate.dir"  value="${lib.dir}/hibernate"/>
	

<!-- _______________________________________________________________________________________ -->
	
	<path id="POS.classpath">
		
		<pathelement location="${build.classes.dir}"/>
		<pathelement location="${etc.dir}"/>
		<pathelement location="${img.dir}"/>
		<pathelement location="${conf.dir}"/>
		<pathelement location="${data.dir}"/>
		
		<fileset dir="${lib.dir}">
	        <include name="**/*.jar"/>
	    </fileset>
		
		<fileset dir="${lib.hibernate.dir}">
             <include name="**/*.jar"/>
        </fileset>
		
	</path>	
	
<!-- ______________________________________RUNC______________________________________________ -->
	
	<!-- Käivita programm konsoolis -->
	<target name="runc" depends="build" description="Run the application (console)">
		
		<java classname="ee.ut.math.tvt.a.Intro" classpathref="POS.classpath" fork="yes">
			<arg value="console" />
		</java>
		
	</target>
	
<!-- ______________________________________RUN______________________________________________ -->

	<!-- Käivita programm -->
	<target name="run" depends="build" description="Run POS application">
		
		<!-- Käivita .class kompileeritud programm -->
		<java classname="ee.ut.math.tvt.a.Intro" classpathref="POS.classpath" fork="yes">
			<jvmarg value="-Xdebug" />
			<jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=64053" />
		</java>
		
	</target>
	
<!-- _____________________________________BUILD_____________________________________________ -->
	
	<!-- Kompileeri. Enne seda puhasta ja uuenda versiooni informatsiooni -->
	<target name="build" depends="clean" description="Build POS application">
		
		<!-- Loo kasutad kompileeritud failidele -->
		<mkdir dir="${build.dir}"/>
		<mkdir dir="${build.classes.dir}"/>
		
		<!-- Kompileeri programm -->
		<javac
            srcdir="${src.dir}"
            destdir="${build.classes.dir}"
			classpathref="POS.classpath"
			debug="true"
            debuglevel="lines,vars,source"
            encoding="utf-8"
            compiler="modern"
            target="1.8"
            source="1.8"
			includeantruntime="false">
			<classpath refid="POS.classpath"/>
		</javac>
		
	</target> 

<!-- ______________________________________JRUN_____________________________________________ -->
	
	<!-- Käivita loodud jar fail -->
	<target name="jrun" depends="dist" description="builds and runs distributable jar file">
		
		<!-- Käivita loodud jar executable fail -->
		<java jar="${dist.dir}/A.jar" fork="yes" />
		
	</target>
	
<!-- ______________________________________DIST_____________________________________________ -->	

	<!-- Loo kompileeritud failidest jar fail -->
	<target name="dist" depends="build, version" description="Generates jar file">
				
		<!-- Loo dist kaust jar ja teistele lisafailidele -->
		<mkdir dir="${dist.dir}"/>
		
		<!-- Loo jar executable -->
		<jar destfile="${dist.dir}/A.jar">
			
		    <fileset dir="${build.classes.dir}"/>
		 	<fileset dir="${img.dir}"/>
			<fileset dir="${etc.dir}"/>
			<fileset dir="${data.dir}"/>
			<fileset dir="${conf.dir}"/>
			
			<!-- Kopeeri kogu lib kaustas olevate jar failide sisu lõppfaili A.jar -->
			<restrict>
			     <name name="**/*.class"/>
			     <archives>
			     	<zips>
			        	<fileset dir="${lib.dir}" includes="**/*.jar"/>
			     		<fileset dir="${lib.hibernate.dir}" includes="**/*.jar"/>
			     	</zips>
			    </archives>
			</restrict>
			
			<!-- Jar failis vajalik kirje JVM'ile -->
	 	    <manifest>
	        	<attribute name="Main-Class" value="ee.ut.math.tvt.a.Intro"/>
	        </manifest>
			
		</jar>
		
	</target>
	
<!-- _______________________________________VERSION_________________________________________ -->
	
	<!-- Kirjuta IntroUI.java faili uuendatud versiooni informatsioon -->
	<target name="version" description="Increments version information and add to the source code">
		
		<propertyfile file="${etc.dir}/version.properties">
			
		<entry key="build.revision.number" type="int" operation="+" value="1"/>
		</propertyfile>
		
		<property file="${etc.dir}/version.properties"/>
		
		<propertyfile file="${etc.dir}/version.properties">
			<entry key="build.number" value="${build.major.number}"/>
			<entry key="build.number" operation="+" value="."/>
			<entry key="build.number" operation="+" value="${build.minor.number}"/>
			<entry key="build.number" operation="+" value="."/>
			<entry key="build.number" operation="+" value="${build.revision.number}"/>
		</propertyfile>
	
	</target>

<!-- _______________________________Build internal documentation___________________________ -->
	
	<target name="javadoc" description="Build internal documentation">
		
		<mkdir dir="${doc.dir}"/>
		
		<javadoc destdir="${doc.dir}" classpathref="POS.classpath">
			<fileset dir="${src.dir}" includes="**/*.java"/>
		</javadoc>
		
	</target>
	
<!-- _______________________________________CLEAN___________________________________________ -->

	<!-- Puhasta -->
	<target name="clean" description="Clean up build system results">
		
		<delete dir="${build.dir}"/>
		
	</target>

<!-- _____________________________________GIT GET INFO_______________________________________ -->

	<!-- Küsi kasutajalt informatsiooni git kasutamiseks -->
	<target name="git_info" description="Commit and push changes to github">
		
		<input
		    message="Sisesta kasutajanimi: "
		    addproperty="USERNAME"
		  />

		<input
		    message="Sisesta parool: "
		    addproperty="PASSWORD"
		  />
		
		<input
		    message="Sisesta kommentaar: "
		    addproperty="COMMENT"
		  />
		
	</target>

<!-- _____________________________________GIT COMMIT________________________________________ -->
		
	<!-- Commiti muudatused ja pushi GitHubi (megaerki/atarkvara). Kasutab ant.bat skripti selleks. -->
	<target name="git_commit" depends="git_info" description="Commit and psuh to github">
		
		<exec dir="${basedir}" executable="ant.bat">
		  	<arg line="${USERNAME} ${PASSWORD} ${COMMENT}"/>
		</exec>
		
	</target>
		
<!-- _____________________________________GIT TAG___________________________________________ -->
			
	<!-- Lisa tag kujul homework_[ncount] ja pushi GitHubi -->
	<target name="git_tag" depends="git_info" description="Create a tag and push">
		
		<input
		    message="Sisesta kodutöö number: "
		    addproperty="n_count"
		/>
		
		<exec dir="${basedir}" executable="cmd.exe">
		  	<arg line="/c git tag -a homework_${n_count} -m '${COMMENT}'"/>
		</exec>
		
		<exec dir="${basedir}" executable="cmd.exe">
			<arg line="/c git push --tags https://${USERNAME}:${PASSWORD}@github.com/megaerki/atarkvara.git"/>
		</exec>
		
	</target>
	<!-- _____________________________________DB MANAGER___________________________________________ -->
	
	<target name="dbmanager" description="Start the HSQLDB manager">
		
        <java 
        	classname="org.hsqldb.util.DatabaseManagerSwing"
            classpathref="POS.classpath"
            fork="yes">
        	
            <arg line="--user sa --url ${db.url}" />
        </java>
	
    </target>
	
	<!-- _____________________________________DB START___________________________________________ -->
		
    <target name="startdb" description="Start the HSQLDB with the default params">
    	    	
        <java
            classname="org.hsqldb.Server"
            classpathref="POS.classpath"
            fork="yes">
        	
            <arg line="-database.0 '${db.file}' -dbname.0 '${db.alias}'" /> 
        </java>
    	
	</target>
	
</project>
